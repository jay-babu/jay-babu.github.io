{"version":3,"sources":["components/Intro.tsx","components/Experience.tsx","pages/Home.tsx","styles/globalStyles.tsx","styles/TextIconButton.tsx","components/NavBar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["HiMyName","styled","p","MyName","Me","Description","AboutMe","JobsName","div","JobsDescription","JobsMain","JobsContainer","props","primary","jobs","name","description","start_date","Date","end_date","position","Experience","useState","currentShownJob","setCurrentShownJob","map","job","index","id","onClick","IntroStyle","PageStyle","ParticlesStyle","particlesParams","interactivity","events","onHover","enable","mode","resize","particles","line_linked","collisions","number","value","shape","type","character","font","weight","style","color","size","random","Home","triggerOnce","duration","width","height","params","GlobalStyle","createGlobalStyle","TextIconButton","button","NavBarSpace","navBarItems","to","icon","faHome","key","faLaptopCode","NavBar","item","smooth","className","App","basename","process","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1db07bee.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nconst HiMyName = styled.p`\n  color: var(--code-color);\n  font-size: clamp(var(--fz-sm), 5vw, var(--fz-md));\n  max-width: 400px;\n`\n\nconst MyName = styled.p`\n  color: var(--orange);\n  font-size: clamp(var(--fz-xl), 5vw, var(--fz-2xl));\n  font-weight: bold;\n  margin: 2vh 0;\n`\n\nconst Me = styled(MyName)`\n  color: #80b3e0;\n`\n\nconst Description = styled(HiMyName)`\n  color: #4b92d1;\n  line-height: 1.5;\n`\n\nexport default function AboutMe() {\n    return (\n        <>\n            <HiMyName>Hi, my name is</HiMyName>\n            <MyName>Jay Patel</MyName>\n            <Me>I help build and protect the web.</Me>\n            <Description>I am currently a Software Development Engineer I at Amazon based in New York. I\n                specialize in building, designing, testing, and probing websites, infrastructure, and\n                more.</Description>\n        </>\n    )\n}\n","import styled from 'styled-components'\nimport { useState } from 'react'\n\nconst JobsName = styled.div`\n    border: var(--code-color) 1px solid;\n    font-family: var(--font-mono);\n    color: var(--white);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    flex: 1 1 auto;\n    width: 100%;\n    text-align: center;\n    padding: 2vh 0;\n    cursor: pointer;\n    background-image: linear-gradient(\n        rgba(100, 255, 218, 0.5),\n        rgba(100, 255, 218, 0.5)\n    );\n    background-position: 50% 50%;\n    background-repeat: no-repeat;\n    background-size: 0 100%;\n    transition: background-size 0.5s, color 0.5s;\n\n    :hover {\n        width: 100%;\n        background-size: 100% 100%;\n    }\n`\n\nconst JobsDescription = styled.div`\n    //border: var(--code-color) 1px solid;\n    font-family: var(--font-mono);\n    color: var(--white);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    flex: 2 1 auto;\n    padding: 2vh 0 2vh 1vw;\n`\n\nconst JobsMain = styled.div`\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    border: var(--code-color) 1px solid;\n    width: 100%;\n`\n\nconst JobsContainer = styled.div<{ primary?: boolean }>`\n    flex: ${props => (props.primary ? `3 1 auto` : `1 1 auto`)};\n`\n\ninterface Jobs {\n    name: string\n    description: string[]\n    start_date: Date\n    end_date: Date | string\n    position: string\n}\n\nconst jobs: Jobs[] = [\n    {\n        name: 'Amazon',\n        description: ['stuff'],\n        start_date: new Date(2021, 1, 4),\n        end_date: 'Present',\n        position: 'Software Development Engineer 1',\n    },\n    {\n        name: 'Amazon Internship',\n        description: ['other stuff'],\n        start_date: new Date(2020, 6, 1),\n        end_date: new Date(2020, 8, 21),\n        position: 'Software Development Engineer Intern',\n    },\n]\n\nexport default function Experience() {\n    const [currentShownJob, setCurrentShownJob] = useState(jobs[0])\n    return (\n        <>\n            <JobsMain>\n                <JobsContainer>\n                    {jobs.map((job, index) => {\n                        return (\n                            <JobsName\n                                key={job.position}\n                                id={job.position}\n                                onClick={() => setCurrentShownJob(job)}\n                            >\n                                {index + 1 + '. ' + job.name}\n                            </JobsName>\n                        )\n                    })}\n                </JobsContainer>\n                <JobsContainer primary>\n                    <JobsDescription>\n                        {currentShownJob.description}\n                    </JobsDescription>\n                </JobsContainer>\n            </JobsMain>\n        </>\n    )\n}\n","import Intro from '../components/Intro'\nimport styled from 'styled-components'\nimport Particles, { IParticlesParams } from 'react-particles-js'\nimport { Fade } from 'react-awesome-reveal'\nimport Experience from '../components/Experience'\n\nconst IntroStyle = styled.div`\n  width: 60vw;\n  padding: 0 2vw 0 2vw;\n  margin: 20vh 0 20vh 0;\n  height: 60vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  background: var(--background-color);\n`\n\nconst PageStyle = styled.div`\n  width: 100vw;\n  height: auto;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`\n\nconst ParticlesStyle = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -1;\n`\n\nconst particlesParams: IParticlesParams = {\n    interactivity: {\n        events: {\n            onHover: {\n                enable: true,\n                mode: 'repulse',\n            },\n            resize: true,\n        },\n    },\n    particles: {\n        line_linked: {\n            enable: false,\n        },\n        collisions: {\n            enable: true,\n            mode: 'bounce',\n        },\n        number: {\n            value: 60,\n        },\n        shape: {\n            type: 'character',\n            character: {\n                value: [ '0', '1' ],\n                font: 'Verdana',\n                weight: '400',\n                style: '',\n            },\n        },\n        color: {\n            value: '#64ffda',\n        },\n        size: {\n            value: 10,\n            random: false,\n        },\n\n    },\n}\n\nexport default function Home() {\n    return (\n        <>\n            <PageStyle>\n                <Fade triggerOnce duration={2000}>\n                    <IntroStyle id='intro' key='intro'><Intro/></IntroStyle>\n                    <IntroStyle id='experience' key='experience'><Experience/></IntroStyle>\n                </Fade>\n            </PageStyle>\n            <ParticlesStyle><Particles width=\"100vw\" height=\"100vh\" params={particlesParams}/></ParticlesStyle>\n        </>\n    )\n}\n","import { createGlobalStyle } from 'styled-components'\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    --font-sans: 'Calibre', 'San Francisco', 'SF Pro Text', -apple-system, system-ui, sans-serif;\n    --font-mono: 'SF Mono', 'Fira Code', 'Fira Mono', 'Roboto Mono', monospace;\n\n    --background-color: #001a30;\n    --code-color: #64ffda;\n    --orange: #FF9900;\n    --white: #FFF;\n    \n    --fz-sm: 16px;\n    --fz-md: 20px;\n    --fz-lg: 24px;\n    --fz-xl: 32px;\n    --fz-2xl: 64px;\n  }\n\n  body {\n    margin: 0;\n    font-family: var(--font-sans);\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    background: var(--background-color);\n  }\n\n  code {\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n    monospace;\n  }\n`\n\nexport default GlobalStyle\n","import styled from 'styled-components'\n\nconst TextIconButton = styled.button`\n  text-decoration: none;\n  cursor: pointer;\n  background: none;\n  border: 0;\n  outline: none;\n  color: var(--white);\n  font-size: clamp(var(--fz-md), 5vw, var(--fz-lg));\n  transition: color 1s ease;\n\n  :hover {\n    color: var(--code-color);\n  }\n\n  .fai {\n    color: var(--code-color);\n  }\n`\n\nexport default TextIconButton\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHome } from '@fortawesome/free-solid-svg-icons/faHome'\nimport { faLaptopCode } from '@fortawesome/free-solid-svg-icons/faLaptopCode'\nimport styled from 'styled-components'\nimport { HashLink } from 'react-router-hash-link'\nimport { IconDefinition } from '@fortawesome/fontawesome-common-types'\nimport TextIconButton from '../styles/TextIconButton'\n\nconst NavBarSpace = styled.div`\n  height: 6vh;\n  position: fixed;\n  width: 98vw;\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 3vh;\n  z-index: 999;\n`\n\ninterface NavBarItems {\n    to: string,\n    icon: IconDefinition,\n    description: string,\n    key: string\n}\n\nconst navBarItems: NavBarItems[] = [\n    { to: '/', icon: faHome, description: '. Home', key: 'intro' },\n    { to: '/', icon: faLaptopCode, description: '. Experience', key: 'experience' },\n]\n\nexport default function NavBar() {\n    return (\n        <NavBarSpace>\n            {navBarItems.map(item => {\n                return <HashLink to={item.to + '#' + item.key} key={item.key} smooth>\n                    <TextIconButton>\n                        <FontAwesomeIcon icon={item.icon} className=\"fai\"/>\n                        {item.description}\n                    </TextIconButton>\n                </HashLink>\n            })}\n        </NavBarSpace>\n    )\n}\n","import React from 'react'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n} from 'react-router-dom'\nimport './App.css'\nimport Home from './pages/Home'\nimport GlobalStyle from './styles/globalStyles'\nimport NavBar from './components/NavBar'\n\nfunction App() {\n    return (\n        <Router basename={process.env.PUBLIC_URL}>\n            <>\n                {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n                <GlobalStyle/>\n                <NavBar/>\n                <Switch>\n                    <Route exact path=\"/\">\n                        <Home/>\n                    </Route>\n                </Switch>\n            </>\n        </Router>\n    )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}