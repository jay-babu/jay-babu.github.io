{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","styles/GradientList.tsx","styles/JobsStyle.tsx","components/Experience.tsx"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_slicedToArray","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","TypeError","GradientList","styled","ul","JobsName","div","rgba","rootColors","orange","JobsDescription","codeColor","JobsMain","JobsContainer","props","primary","jobs","description","start_date","Date","end_date","position","resource_link","URL","dateToString","date","toLocaleDateString","year","month","day","Experience","useState","currentShownJob","setCurrentShownJob","currentJobIndex","setCurrentJobIndex","map","job","index","id","onClick","className","sentence"],"mappings":"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","file":"static/js/5.8219b4e4.chunk.js","sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import styled from 'styled-components'\n\nconst GradientList = styled.ul`\n    /* List */\n    padding: 0 2%;\n    overflow: auto;\n\n    /* List element */\n\n    li {\n        counter-increment: index;\n        display: flex;\n        align-items: center;\n        padding: 12px 0;\n        box-sizing: border-box;\n    }\n\n    /* Element counter */\n\n    li::before {\n        content: counters(index, '.', decimal-leading-zero);\n        font-size: 1.5rem;\n        text-align: right;\n        font-weight: bold;\n        min-width: 50px;\n        padding-right: 12px;\n        font-feature-settings: 'tnum';\n        font-variant-numeric: tabular-nums;\n        background-image: linear-gradient(to bottom, aquamarine, orangered);\n        background-attachment: fixed;\n        -webkit-background-clip: text;\n        -webkit-text-fill-color: transparent;\n    }\n\n    /* Element separation */\n\n    li + li {\n        border-top: 1px solid rgba(255, 255, 255, 0.3);\n    }\n`\n\nexport default GradientList\n","import styled from 'styled-components'\nimport { rgba } from 'polished'\nimport { rootColors } from './globalStyles'\n\nexport const JobsName = styled.div`\n    font-family: var(--font-mono);\n    color: var(--white);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    width: 100%;\n    height: 100%;\n    text-align: center;\n    padding: 2vh 0;\n    cursor: pointer;\n    background: linear-gradient(\n            ${rgba(rootColors.orange, 0.2)},\n            ${rgba(rootColors.orange, 0.2)}\n        )\n        50% 50% no-repeat;\n    background-size: 0 100%;\n    transition: background-size 0.5s, color 0.5s;\n\n    :hover {\n        width: 100%;\n        background-size: 100% 100%;\n    }\n`\n\nexport const JobsDescription = styled.div`\n    font-family: var(--font-mono);\n    color: var(--white);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    padding: 2vh 2vw;\n    border: ${rgba(rootColors.codeColor, 1)} 1px solid;\n    max-height: 80vh;\n\n    .position {\n        color: ${rgba(rootColors.orange, 1)};\n        margin: 1vh 0;\n    }\n\n    .date {\n        margin: 1vh 0;\n    }\n\n    .description {\n        margin: 1.5vh 0;\n    }\n`\n\nexport const JobsMain = styled.div`\n    display: flex;\n`\n\nexport const JobsContainer = styled.div<{ primary?: boolean }>`\n    flex: ${props => (props.primary ? `3 1 auto` : `1 1 auto`)};\n    width: ${props => (props.primary ? `77%` : `auto`)};\n    display: flex;\n    flex-direction: column;\n    min-height: 100%;\n\n    .active {\n        background: ${rgba(rootColors.orange, 0.2)};\n        transition: background-color 0.5s ease-in-out;\n        animation: grow 1s;\n        border-right: ${rgba(rootColors.orange, 1)} 1px solid;\n        z-index: 1;\n\n        &:hover {\n            background: ${rgba(rootColors.orange, 0.4)};\n        }\n\n        @keyframes grow {\n            from {\n                border-right: ${rgba(rootColors.orange, 1)} 1px solid;\n            }\n            to {\n                border-right: ${rgba(rootColors.orange, 1)} 1px solid;\n            }\n        }\n    }\n`\n","import { useState } from 'react'\nimport GradientList from '../styles/GradientList'\nimport {\n    JobsContainer,\n    JobsDescription,\n    JobsMain,\n    JobsName,\n} from '../styles/JobsStyle'\n\ninterface Jobs {\n    name: string\n    description: string[]\n    start_date: Date\n    end_date: Date | null\n    position: string\n    resource_link?: URL\n}\n\nconst jobs: Jobs[] = [\n    {\n        name: 'Amazon',\n        description: ['Starting Soon'],\n        start_date: new Date(2021, 0, 4),\n        end_date: null,\n        position: 'Software Development Engineer 1',\n    },\n    {\n        name: 'AWS Internship',\n        description: [\n            'Utilized Golang to create APIs to securely communicate between CodeBuild and CodeArtifact',\n            'Sanitized Data in Scala',\n            'Integrated other services to set up package managers',\n            'Communicated with senior engineers to develop & establish best scalable practices',\n            'Developed using Microservices to allow scalability and ensure continuous customer access',\n            'Learned CodeBuild, DynamoDB, and more',\n        ],\n        start_date: new Date(2020, 5, 1),\n        end_date: new Date(2020, 7, 21),\n        position: 'Software Development Engineer Intern',\n        resource_link: new URL(\n            'https://docs.aws.amazon.com/codeartifact/latest/ug/codebuild.html',\n        ),\n    },\n    {\n        name: 'Cigna',\n        description: [\n            'Assisted in developing a website to show information about in-network healthcare providers utilizing Angular and Leaflet.js',\n            'Established endpoints and creating REST APIs with Django',\n            'Utilized Vue.js to build a modern web application to support children with Autism',\n            'Incorporated Flask and MongoDB to maintain the backend',\n        ],\n        start_date: new Date(2019, 5, 28),\n        end_date: new Date(2020, 3, 13),\n        position: 'Software Engineer (TECDP) Intern',\n        resource_link: new URL(\n            'https://docs.aws.amazon.com/codeartifact/latest/ug/codebuild.html',\n        ),\n    },\n    {\n        name: 'UConn',\n        description: [\n            'Developed an Image Classifier using Keras and TensorFlow',\n            'Exploited knowledge derived from data for data development with AI algorithms and machine learning',\n        ],\n        start_date: new Date(2018, 8, 28),\n        end_date: new Date(2020, 5, 14),\n        position: 'Undergraduate Research Assistant',\n        resource_link: new URL(\n            'https://docs.aws.amazon.com/codeartifact/latest/ug/codebuild.html',\n        ),\n    },\n]\n\nfunction dateToString(date: Date | null) {\n    return date\n        ? date.toLocaleDateString(undefined, {\n              year: 'numeric',\n              month: 'long',\n              day: 'numeric',\n          })\n        : 'Present'\n}\n\nexport default function Experience() {\n    const [currentShownJob, setCurrentShownJob] = useState(jobs[0])\n    const [currentJobIndex, setCurrentJobIndex] = useState(0)\n    return (\n        <>\n            <JobsMain>\n                <JobsContainer>\n                    {jobs.map((job, index) => {\n                        return (\n                            <JobsName\n                                key={job.position}\n                                id={job.position}\n                                onClick={() => {\n                                    setCurrentShownJob(job)\n                                    setCurrentJobIndex(index)\n                                }}\n                                className={\n                                    currentJobIndex === index ? 'active' : ''\n                                }\n                            >\n                                {index + 1 + '. ' + job.name}\n                            </JobsName>\n                        )\n                    })}\n                </JobsContainer>\n                <JobsContainer primary>\n                    <JobsDescription>\n                        <h2 className={'position'}>\n                            {currentShownJob.position}\n                        </h2>\n                        <p className={'date'}>\n                            {dateToString(currentShownJob.start_date) +\n                                ' - ' +\n                                dateToString(currentShownJob.end_date)}\n                        </p>\n                        <GradientList className={'description'}>\n                            {currentShownJob.description.map(sentence => (\n                                <li key={sentence}>{sentence}</li>\n                            ))}\n                        </GradientList>\n                    </JobsDescription>\n                </JobsContainer>\n            </JobsMain>\n        </>\n    )\n}\n"],"sourceRoot":""}