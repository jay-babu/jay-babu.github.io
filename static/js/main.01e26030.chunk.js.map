{"version":3,"sources":["components/Intro.tsx","styles/GradientList.tsx","styles/JobsStyle.tsx","components/Experience.tsx","pages/Home.tsx","styles/globalStyles.tsx","styles/TextIconButton.tsx","components/NavBar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["HiMyName","styled","p","MyName","Me","Description","AboutMe","GradientList","ul","JobsName","div","JobsDescription","JobsMain","JobsContainer","props","primary","jobs","name","description","Array","keys","map","_","start_date","Date","end_date","position","dateToString","date","toLocaleDateString","undefined","year","month","day","Experience","useState","currentShownJob","setCurrentShownJob","currentJobIndex","setCurrentJobIndex","job","index","id","onClick","className","sentence","IntroStyle","PositionStyle","ParticlesStyle","particlesParams","interactivity","events","onHover","enable","mode","resize","particles","line_linked","collisions","number","value","shape","type","character","font","weight","style","color","size","random","Home","width","height","params","triggerOnce","duration","GlobalStyle","createGlobalStyle","TextIconButton","button","NavBarSpace","navBarItems","to","icon","faHome","key","faLaptopCode","NavBar","item","smooth","App","basename","process","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.01e26030.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nconst HiMyName = styled.p`\n  color: var(--code-color);\n  font-size: clamp(var(--fz-sm), 5vw, var(--fz-md));\n  max-width: 400px;\n`\n\nconst MyName = styled.p`\n  color: var(--orange);\n  font-size: clamp(var(--fz-xl), 5vw, var(--fz-2xl));\n  font-weight: bold;\n  margin: 2vh 0;\n`\n\nconst Me = styled(MyName)`\n  color: #80b3e0;\n`\n\nconst Description = styled(HiMyName)`\n  color: #4b92d1;\n  line-height: 1.5;\n`\n\nexport default function AboutMe() {\n    return (\n        <>\n            <HiMyName>Hi, my name is</HiMyName>\n            <MyName>Jay Patel</MyName>\n            <Me>I help build and protect the web.</Me>\n            <Description>I am currently a Software Development Engineer I at Amazon based in New York. I\n                specialize in building, designing, testing, and probing websites, infrastructure, and\n                more.</Description>\n        </>\n    )\n}\n","import styled from 'styled-components'\n\nconst GradientList = styled.ul`\n    /* List */\n\n    ul {\n        counter-reset: index;\n        padding: 0;\n        max-width: 300px;\n    }\n\n    /* List element */\n\n    li {\n        counter-increment: index;\n        display: -webkit-box;\n        display: flex;\n        -webkit-box-align: center;\n        align-items: center;\n        padding: 12px 0;\n        box-sizing: border-box;\n    }\n\n    /* Element counter */\n\n    li::before {\n        content: counters(index, '.', decimal-leading-zero);\n        font-size: 1.5rem;\n        text-align: right;\n        font-weight: bold;\n        min-width: 50px;\n        padding-right: 12px;\n        font-feature-settings: 'tnum';\n        font-variant-numeric: tabular-nums;\n        align-self: flex-start;\n        background-image: -webkit-gradient(\n            linear,\n            left top,\n            left bottom,\n            from(aquamarine),\n            to(orangered)\n        );\n        background-image: linear-gradient(to bottom, aquamarine, orangered);\n        background-attachment: fixed;\n        -webkit-background-clip: text;\n        -webkit-text-fill-color: transparent;\n    }\n\n    /* Element separation */\n\n    li + li {\n        border-top: 1px solid rgba(255, 255, 255, 0.2);\n    }\n`\n\nexport default GradientList\n","import styled from 'styled-components'\n\nexport const JobsName = styled.div`\n    border: var(--code-color) 1px solid;\n    font-family: var(--font-mono);\n    color: var(--white);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    width: 100%;\n    height: 100%;\n    text-align: center;\n    padding: 2vh 0;\n    cursor: pointer;\n    background: linear-gradient(\n            rgba(100, 255, 218, 0.3),\n            rgba(100, 255, 218, 0.3)\n        )\n        50% 50% no-repeat;\n    background-size: 0 100%;\n    transition: background-size 0.5s, color 0.5s;\n\n    :hover {\n        width: 100%;\n        background-size: 100% 100%;\n    }\n`\n\nexport const JobsDescription = styled.div`\n    font-family: var(--font-mono);\n    color: var(--white);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    padding: 2vh 0 2vh 1vw;\n\n    .position {\n        color: var(--orange);\n        margin: 1vh 0;\n    }\n\n    .date {\n        margin: 1vh 0;\n    }\n\n    .description {\n        margin: 1.5vh 0;\n    }\n`\n\nexport const JobsMain = styled.div`\n    display: flex;\n    border: var(--code-color) 1px solid;\n    width: 65vw;\n    max-width: 800px;\n`\n\nexport const JobsContainer = styled.div<{ primary?: boolean }>`\n    flex: ${props => (props.primary ? `3 1 auto` : `1 1 auto`)};\n    width: ${props => (props.primary ? `77%` : `auto`)};\n    display: flex;\n    flex-direction: column;\n    min-height: 100%;\n\n    .active {\n        background: rgba(100, 255, 218, 0.1);\n        transition: background-color 0.5s ease-in-out;\n\n        &:hover {\n            background: rgba(100, 255, 218, 0.3);\n        }\n    }\n`\n","import { useState } from 'react'\nimport GradientList from '../styles/GradientList'\nimport {\n    JobsContainer,\n    JobsDescription,\n    JobsMain,\n    JobsName,\n} from '../styles/JobsStyle'\n\ninterface Jobs {\n    name: string\n    description: string[]\n    start_date: Date\n    end_date: Date | null\n    position: string\n}\n\nconst jobs: Jobs[] = [\n    {\n        name: 'Amazon',\n        description: [...Array(10).keys()].map(_ => 'hi'),\n        start_date: new Date(2021, 0, 4),\n        end_date: null,\n        position: 'Software Development Engineer 1',\n    },\n    {\n        name: 'AWS Internship',\n        description: ['other stuff'],\n        start_date: new Date(2020, 5, 1),\n        end_date: new Date(2020, 7, 21),\n        position: 'Software Development Engineer Intern',\n    },\n]\n\nfunction dateToString(date: Date | null) {\n    return date\n        ? date.toLocaleDateString(undefined, {\n              year: 'numeric',\n              month: 'long',\n              day: 'numeric',\n          })\n        : 'Present'\n}\n\nexport default function Experience() {\n    const [currentShownJob, setCurrentShownJob] = useState(jobs[0])\n    const [currentJobIndex, setCurrentJobIndex] = useState(0)\n    return (\n        <>\n            <JobsMain>\n                <JobsContainer>\n                    {jobs.map((job, index) => {\n                        return (\n                            <JobsName\n                                key={job.position}\n                                id={job.position}\n                                onClick={() => {\n                                    setCurrentShownJob(job)\n                                    setCurrentJobIndex(index)\n                                }}\n                                className={\n                                    currentJobIndex === index ? 'active' : ''\n                                }\n                            >\n                                {index + 1 + '. ' + job.name}\n                            </JobsName>\n                        )\n                    })}\n                </JobsContainer>\n                <JobsContainer primary>\n                    <JobsDescription>\n                        <h2 className={'position'}>\n                            {currentShownJob.position}\n                        </h2>\n                        <p className={'date'}>\n                            {dateToString(currentShownJob.start_date) +\n                                ' - ' +\n                                dateToString(currentShownJob.end_date)}\n                        </p>\n                        <GradientList className={'description'}>\n                            {currentShownJob.description.map(sentence => {\n                                return <li>{sentence}</li>\n                            })}\n                        </GradientList>\n                    </JobsDescription>\n                </JobsContainer>\n            </JobsMain>\n        </>\n    )\n}\n","import Intro from '../components/Intro'\nimport styled from 'styled-components'\nimport Particles, { IParticlesParams } from 'react-particles-js'\nimport { Fade } from 'react-awesome-reveal'\nimport Experience from '../components/Experience'\n\nconst IntroStyle = styled.div`\n    width: 80vw;\n    height: 100vh;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n`\n\nconst PositionStyle = styled.div`\n    .center {\n        width: 100vw;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n    }\n\n    .padding {\n        padding: 3vh 3vw;\n    }\n\n    .background {\n        background: var(--background-color);\n    }\n`\n\nconst ParticlesStyle = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    z-index: -1;\n`\n\nconst particlesParams: IParticlesParams = {\n    interactivity: {\n        events: {\n            onHover: {\n                enable: true,\n                mode: 'repulse',\n            },\n            resize: true,\n        },\n    },\n    particles: {\n        line_linked: {\n            enable: false,\n        },\n        collisions: {\n            enable: true,\n            mode: 'bounce',\n        },\n        number: {\n            value: 60,\n        },\n        shape: {\n            type: 'character',\n            character: {\n                value: ['0', '1'],\n                font: 'Verdana',\n                weight: '400',\n                style: '',\n            },\n        },\n        color: {\n            value: '#64ffda',\n        },\n        size: {\n            value: 10,\n            random: false,\n        },\n    },\n}\n\nexport default function Home() {\n    return (\n        <>\n            <ParticlesStyle>\n                <Particles\n                    width=\"100vw\"\n                    height=\"100vh\"\n                    params={particlesParams}\n                />\n            </ParticlesStyle>\n            <Fade triggerOnce duration={2000}>\n                <PositionStyle>\n                    <IntroStyle id=\"intro\" key=\"intro\">\n                        <div className={'background padding'}>\n                            <Intro />\n                        </div>\n                    </IntroStyle>\n                    <IntroStyle\n                        id=\"experience\"\n                        key=\"experience\"\n                        className={'center'}\n                    >\n                        <div className={'background padding'}>\n                            <Experience />\n                        </div>\n                    </IntroStyle>\n                </PositionStyle>\n            </Fade>\n        </>\n    )\n}\n","import { createGlobalStyle } from 'styled-components'\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    --font-sans: 'Calibre', 'San Francisco', 'SF Pro Text', -apple-system, system-ui, sans-serif;\n    --font-mono: 'SF Mono', 'Fira Code', 'Fira Mono', 'Roboto Mono', monospace;\n\n    --background-color: #001a30;\n    --code-color: #64ffda;\n    --orange: #FF9900;\n    --white: #FFF;\n    \n    --fz-sm: 16px;\n    --fz-md: 20px;\n    --fz-lg: 24px;\n    --fz-xl: 32px;\n    --fz-2xl: 64px;\n  }\n\n  body {\n    margin: 0;\n    font-family: var(--font-sans);\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    background: var(--background-color);\n  }\n\n  code {\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n    monospace;\n  }\n`\n\nexport default GlobalStyle\n","import styled from 'styled-components'\n\nconst TextIconButton = styled.button`\n  text-decoration: none;\n  cursor: pointer;\n  background: none;\n  border: 0;\n  outline: none;\n  color: var(--white);\n  font-size: clamp(var(--fz-md), 5vw, var(--fz-lg));\n  transition: color 1s ease;\n\n  :hover {\n    color: var(--code-color);\n  }\n\n  .fai {\n    color: var(--code-color);\n  }\n`\n\nexport default TextIconButton\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHome } from '@fortawesome/free-solid-svg-icons/faHome'\nimport { faLaptopCode } from '@fortawesome/free-solid-svg-icons/faLaptopCode'\nimport styled from 'styled-components'\nimport { HashLink } from 'react-router-hash-link'\nimport { IconDefinition } from '@fortawesome/fontawesome-common-types'\nimport TextIconButton from '../styles/TextIconButton'\n\nconst NavBarSpace = styled.div`\n    top: 1vh;\n    position: fixed;\n    width: 98vw;\n    display: flex;\n    justify-content: flex-end;\n    margin-top: 3vh;\n    z-index: 999;\n`\n\ninterface NavBarItems {\n    to: string\n    icon: IconDefinition\n    description: string\n    key: string\n}\n\nconst navBarItems: NavBarItems[] = [\n    { to: '/', icon: faHome, description: '. Home', key: 'intro' },\n    {\n        to: '/',\n        icon: faLaptopCode,\n        description: '. Experience',\n        key: 'experience',\n    },\n]\n\nexport default function NavBar() {\n    return (\n        <NavBarSpace>\n            {navBarItems.map(item => {\n                return (\n                    <HashLink\n                        to={item.to + '#' + item.key}\n                        key={item.key}\n                        smooth\n                    >\n                        <TextIconButton>\n                            <FontAwesomeIcon icon={item.icon} className=\"fai\" />\n                            {item.description}\n                        </TextIconButton>\n                    </HashLink>\n                )\n            })}\n        </NavBarSpace>\n    )\n}\n","import React from 'react'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n} from 'react-router-dom'\nimport './App.css'\nimport Home from './pages/Home'\nimport GlobalStyle from './styles/globalStyles'\nimport NavBar from './components/NavBar'\n\nfunction App() {\n    return (\n        <Router basename={process.env.PUBLIC_URL}>\n            <>\n                {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n                <GlobalStyle/>\n                <NavBar/>\n                <Switch>\n                    <Route exact path=\"/\">\n                        <Home/>\n                    </Route>\n                </Switch>\n            </>\n        </Router>\n    )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}